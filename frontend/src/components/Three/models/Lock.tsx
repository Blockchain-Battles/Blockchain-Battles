///@ts-nocheck
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/lock.gltf -t -o src/components/Three/models/Lock.tsx 
Author: KejbisiDev (https://sketchfab.com/KejbisiDev)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/key-and-lock-988a41b49b6f4612a088ddd3bf90acc1
Title: Key and Lock
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Lock_Material002_0: THREE.Mesh;
    Lock_Material003_0: THREE.Mesh;
    Lock_Material001_0: THREE.Mesh;
    Key_Material004_0: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Lock(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/lock.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group
          position={[0, 0, -0.129]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[34.612, 100, 100]}
        >
          <mesh
            geometry={nodes.Lock_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Lock_Material003_0.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Lock_Material001_0.geometry}
            material={materials["Material.001"]}
          />
        </group>
      </group>
    </group>
  );
}

export function KeyModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/lock.gltf") as GLTFResult;
  <group {...props} dispose={null}>
    <group scale={0.01}>
      <group>
        <mesh
          geometry={nodes.Key_Material004_0.geometry}
          material={materials["Material.004"]}
          position={[95.865, 186.93, -87.69]}
          rotation={[-1.164, -0.733, -1.692]}
          scale={[100, 52.887, 100]}
        />
      </group>
    </group>
  </group>;
}

useGLTF.preload("/lock.gltf");
